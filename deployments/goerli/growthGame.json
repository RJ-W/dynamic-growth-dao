{
  "address": "0x0B6531FD6aBd76c5D83AA528BD10cad74380B4Fd",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "priceFeedAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "GrowthGame__NotOwner",
      "type": "error"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "inputs": [],
      "name": "getIntegration",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPrediction",
      "outputs": [
        {
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceFeed",
      "outputs": [
        {
          "internalType": "contract AggregatorV3Interface",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "int256",
          "name": "uplift",
          "type": "int256"
        }
      ],
      "name": "predict",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "verify",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0xc940ec40fcb133154c2572eb40881803a29c7ab311167ba17e5e916574101f74",
  "receipt": {
    "to": null,
    "from": "0xdf83456Da43D7d402159d50c2647423F19A9E094",
    "contractAddress": "0x0B6531FD6aBd76c5D83AA528BD10cad74380B4Fd",
    "transactionIndex": 103,
    "gasUsed": "749465",
    "logsBloom": "0x
    "blockHash": "0x9ae6c34d6840cdb49a603f181947bfc3e460b509c5f4bf5e15db71049f1706c7",
    "transactionHash": "0xc940ec40fcb133154c2572eb40881803a29c7ab311167ba17e5e916574101f74",
    "logs": [],
    "blockNumber": 8040806,
    "cumulativeGasUsed": "26105921",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e"
  ],
  "numDeployments": 2,
  "solcInputHash": "e95896f10b511560a10ad3f08ad63869",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"priceFeedAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"GrowthGame__NotOwner\",\"type\":\"error\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[],\"name\":\"getIntegration\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPrediction\",\"outputs\":[{\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceFeed\",\"outputs\":[{\"internalType\":\"contract AggregatorV3Interface\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"int256\",\"name\":\"uplift\",\"type\":\"int256\"}],\"name\":\"predict\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"verify\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"author\":\"RJ-W\",\"details\":\"This price feeds from Chainlink\",\"kind\":\"dev\",\"methods\":{\"predict(int256)\":{\"details\":\"init or update one's prediction\"},\"verify()\":{\"details\":\"get the latest price, verify all prediction, and record\"}},\"title\":\"growthGame Contract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"predict(int256)\":{\"notice\":\"wizards predict the uplift of successor exchange rate between ETH and USD\"},\"verify()\":{\"notice\":\"owner operate the game\"}},\"notice\":\"This contract is for finding out prophets from wizards through continuous predict game\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/growthGame.sol\":\"growthGame\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0x6e6e4b0835904509406b070ee173b5bc8f677c19421b76be38aea3b1b3d30846\",\"license\":\"MIT\"},\"contracts/growthGame.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n\\n// 1.Pragma\\npragma solidity ^0.8.9;\\n\\n// 2.Imports\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\n// 3.Interfaces\\n// 4.Libraries\\n\\n// Errors contractName__errorName\\nerror GrowthGame__NotOwner();\\n\\n// 5.Contracts\\n/** \\n * @title growthGame Contract\\n * @author RJ-W\\n * @notice This contract is for finding out prophets from wizards through continuous predict game\\n * @dev This price feeds from Chainlink\\n */\\ncontract growthGame {\\n\\n\\t// 5.1 Type Declarations\\n\\t// 5.2 State variables\\n\\taddress private immutable i_owner;\\n\\taddress[] private s_wizards;\\n\\taddress[] private s_prophets;\\n\\n\\tuint256 private s_currentPrice;\\n\\tmapping(address => int256) private s_addressToPrediction;\\n\\tmapping(address => uint256) private s_addressToIntegration;\\n\\tAggregatorV3Interface private s_priceFeed;\\n\\n\\t// 5.3 Events\\n\\t// 5.4 Errors\\n\\t// 5.5 Modifiers\\n\\tmodifier onlyOwner() {\\n\\t\\t// \\ud83d\\udc37 require(msg.sender == i_owner);\\n\\t\\tif (msg.sender != i_owner) revert GrowthGame__NotOwner();\\n\\t\\t_;\\n\\t}\\n\\n\\t// 5.6 Functions: constructor, receive, fallback, external, public, internal, private, view/pure\\n\\tconstructor(address priceFeedAddress) {\\n\\t\\ts_priceFeed = AggregatorV3Interface(priceFeedAddress);\\n\\t\\ti_owner = msg.sender;\\n\\n\\t\\t// \\ud83d\\udc37 init currentPrice\\n\\t\\ts_currentPrice = getCurrentPrice(s_priceFeed);\\n\\t}\\n\\n\\treceive() external payable {\\n\\t\\tpredict(0);\\n\\t}\\n\\n\\tfallback() external payable {\\n\\t\\tpredict(0);\\n\\t}\\n\\n\\t/** \\n\\t * @notice wizards predict the uplift of successor exchange rate between ETH and USD\\n\\t * @dev init or update one's prediction\\n\\t */\\n\\tfunction predict(int256 uplift) public {\\n\\t\\ts_addressToPrediction[msg.sender] = uplift;\\n\\t\\ts_wizards.push(msg.sender);\\n\\t}\\n\\n\\t/** \\n\\t * @notice owner operate the game\\n\\t * @dev get the latest price, verify all prediction, and record\\n\\t */\\n\\tfunction verify() public onlyOwner {\\n\\t\\tuint256 latestPrice = getCurrentPrice(s_priceFeed);\\n\\t\\tint256 realUplift = int256(latestPrice - s_currentPrice);\\n\\n\\t\\tfor (uint256 index = 0; index < s_wizards.length; index++) {\\n\\t\\t\\taddress wizard = s_wizards[index];\\n\\n\\t\\t\\tuint256 diff = uint256(s_addressToPrediction[wizard] - realUplift);\\n\\t\\t\\ts_addressToIntegration[wizard] += (1 / diff);\\n\\n\\t\\t\\ts_addressToPrediction[wizard] = 0;\\n\\t\\t}\\n\\n\\t\\ts_wizards = new address[](0);\\n\\t}\\n\\n\\t/** \\n\\t * @notice prophets will stand out based on the integration records\\n\\t * @dev elect prophets from wizards based on integration records\\n\\t */\\n\\n\\n\\tfunction getCurrentPrice(AggregatorV3Interface priceFeed) internal view returns (uint256) {\\n\\t\\t(, int256 answer, , , ) = priceFeed.latestRoundData();\\n\\t\\treturn uint256(answer);\\n\\t}\\n\\n\\tfunction getPrediction() public view returns (int256) {\\n\\t\\tint256 prediction = s_addressToPrediction[msg.sender];\\n\\t\\treturn prediction;\\n\\t}\\n\\n\\tfunction getIntegration() public view returns (uint256) {\\n\\t\\tuint256 integration = s_addressToIntegration[msg.sender];\\n\\t\\treturn integration;\\n\\t}\\n\\n\\tfunction getPriceFeed() public view returns (AggregatorV3Interface) {\\n\\t\\treturn s_priceFeed;\\n\\t}\\n}\",\"keccak256\":\"0x51e78243b1f1c03a147bf09a69b4130241fdc443b0629164f78e9f09f9a429b8\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162000ebc38038062000ebc8339818101604052810190620000379190620001ea565b80600560006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff1681525050620000df600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16620000ec60201b60201c565b6002819055505062000361565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b1580156200013657600080fd5b505afa1580156200014b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620001719190620002d9565b50505091505080915050919050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000620001b28262000185565b9050919050565b620001c481620001a5565b8114620001d057600080fd5b50565b600081519050620001e481620001b9565b92915050565b60006020828403121562000203576200020262000180565b5b60006200021384828501620001d3565b91505092915050565b600069ffffffffffffffffffff82169050919050565b6200023d816200021c565b81146200024957600080fd5b50565b6000815190506200025d8162000232565b92915050565b6000819050919050565b620002788162000263565b81146200028457600080fd5b50565b60008151905062000298816200026d565b92915050565b6000819050919050565b620002b3816200029e565b8114620002bf57600080fd5b50565b600081519050620002d381620002a8565b92915050565b600080600080600060a08688031215620002f857620002f762000180565b5b600062000308888289016200024c565b95505060206200031b8882890162000287565b94505060406200032e88828901620002c2565b93505060606200034188828901620002c2565b925050608062000354888289016200024c565b9150509295509295909350565b608051610b3f6200037d600039600061029a0152610b3f6000f3fe60806040526004361061004e5760003560e01c80634b4259a81461006b5780639e87a5cd146100945780639f615ee1146100bf578063e1a24e9d146100ea578063fc735e99146101155761005f565b3661005f5761005d600061012c565b005b610069600061012c565b005b34801561007757600080fd5b50610092600480360381019061008d9190610692565b61012c565b005b3480156100a057600080fd5b506100a96101d6565b6040516100b6919061073e565b60405180910390f35b3480156100cb57600080fd5b506100d4610200565b6040516100e19190610768565b60405180910390f35b3480156100f657600080fd5b506100ff61024c565b60405161010c919061079c565b60405180910390f35b34801561012157600080fd5b5061012a610298565b005b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508091505090565b600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508091505090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461031d576040517f8d08e7af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061034a600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610520565b905060006002548261035c91906107e6565b905060005b6000805490508110156104bb5760008082815481106103835761038261081a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600083600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103fd9190610849565b905080600161040c919061090c565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461045a919061093d565b925050819055506000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505080806104b390610993565b915050610361565b50600067ffffffffffffffff8111156104d7576104d66109dc565b5b6040519080825280602002602001820160405280156105055781602001602082028036833780820191505090505b506000908051906020019061051b9291906105b0565b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561056957600080fd5b505afa15801561057d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a19190610a8e565b50505091505080915050919050565b828054828255906000526020600020908101928215610629579160200282015b828111156106285782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906105d0565b5b509050610636919061063a565b5090565b5b8082111561065357600081600090555060010161063b565b5090565b600080fd5b6000819050919050565b61066f8161065c565b811461067a57600080fd5b50565b60008135905061068c81610666565b92915050565b6000602082840312156106a8576106a7610657565b5b60006106b68482850161067d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107046106ff6106fa846106bf565b6106df565b6106bf565b9050919050565b6000610716826106e9565b9050919050565b60006107288261070b565b9050919050565b6107388161071d565b82525050565b6000602082019050610753600083018461072f565b92915050565b6107628161065c565b82525050565b600060208201905061077d6000830184610759565b92915050565b6000819050919050565b61079681610783565b82525050565b60006020820190506107b1600083018461078d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107f182610783565b91506107fc83610783565b92508282101561080f5761080e6107b7565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006108548261065c565b915061085f8361065c565b9250827f80000000000000000000000000000000000000000000000000000000000000000182126000841215161561089a576108996107b7565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0182136000841216156108d2576108d16107b7565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061091782610783565b915061092283610783565b925082610932576109316108dd565b5b828204905092915050565b600061094882610783565b915061095383610783565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610988576109876107b7565b5b828201905092915050565b600061099e82610783565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109d1576109d06107b7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600069ffffffffffffffffffff82169050919050565b610a2a81610a0b565b8114610a3557600080fd5b50565b600081519050610a4781610a21565b92915050565b600081519050610a5c81610666565b92915050565b610a6b81610783565b8114610a7657600080fd5b50565b600081519050610a8881610a62565b92915050565b600080600080600060a08688031215610aaa57610aa9610657565b5b6000610ab888828901610a38565b9550506020610ac988828901610a4d565b9450506040610ada88828901610a79565b9350506060610aeb88828901610a79565b9250506080610afc88828901610a38565b915050929550929590935056fea2646970667358221220616bbf94dc223ff63eb359a034ae84320d39a0740e7ab3f2b342c62f1171c07164736f6c63430008090033",
  "deployedBytecode": "0x60806040526004361061004e5760003560e01c80634b4259a81461006b5780639e87a5cd146100945780639f615ee1146100bf578063e1a24e9d146100ea578063fc735e99146101155761005f565b3661005f5761005d600061012c565b005b610069600061012c565b005b34801561007757600080fd5b50610092600480360381019061008d9190610692565b61012c565b005b3480156100a057600080fd5b506100a96101d6565b6040516100b6919061073e565b60405180910390f35b3480156100cb57600080fd5b506100d4610200565b6040516100e19190610768565b60405180910390f35b3480156100f657600080fd5b506100ff61024c565b60405161010c919061079c565b60405180910390f35b34801561012157600080fd5b5061012a610298565b005b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055506000339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b6000600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b600080600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508091505090565b600080600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205490508091505090565b7f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461031d576040517f8d08e7af00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b600061034a600560009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16610520565b905060006002548261035c91906107e6565b905060005b6000805490508110156104bb5760008082815481106103835761038261081a565b5b9060005260206000200160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050600083600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546103fd9190610849565b905080600161040c919061090c565b600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600082825461045a919061093d565b925050819055506000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550505080806104b390610993565b915050610361565b50600067ffffffffffffffff8111156104d7576104d66109dc565b5b6040519080825280602002602001820160405280156105055781602001602082028036833780820191505090505b506000908051906020019061051b9291906105b0565b505050565b6000808273ffffffffffffffffffffffffffffffffffffffff1663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561056957600080fd5b505afa15801561057d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105a19190610a8e565b50505091505080915050919050565b828054828255906000526020600020908101928215610629579160200282015b828111156106285782518260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550916020019190600101906105d0565b5b509050610636919061063a565b5090565b5b8082111561065357600081600090555060010161063b565b5090565b600080fd5b6000819050919050565b61066f8161065c565b811461067a57600080fd5b50565b60008135905061068c81610666565b92915050565b6000602082840312156106a8576106a7610657565b5b60006106b68482850161067d565b91505092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000819050919050565b60006107046106ff6106fa846106bf565b6106df565b6106bf565b9050919050565b6000610716826106e9565b9050919050565b60006107288261070b565b9050919050565b6107388161071d565b82525050565b6000602082019050610753600083018461072f565b92915050565b6107628161065c565b82525050565b600060208201905061077d6000830184610759565b92915050565b6000819050919050565b61079681610783565b82525050565b60006020820190506107b1600083018461078d565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006107f182610783565b91506107fc83610783565b92508282101561080f5761080e6107b7565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006108548261065c565b915061085f8361065c565b9250827f80000000000000000000000000000000000000000000000000000000000000000182126000841215161561089a576108996107b7565b5b827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0182136000841216156108d2576108d16107b7565b5b828203905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600061091782610783565b915061092283610783565b925082610932576109316108dd565b5b828204905092915050565b600061094882610783565b915061095383610783565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610988576109876107b7565b5b828201905092915050565b600061099e82610783565b91507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8214156109d1576109d06107b7565b5b600182019050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600069ffffffffffffffffffff82169050919050565b610a2a81610a0b565b8114610a3557600080fd5b50565b600081519050610a4781610a21565b92915050565b600081519050610a5c81610666565b92915050565b610a6b81610783565b8114610a7657600080fd5b50565b600081519050610a8881610a62565b92915050565b600080600080600060a08688031215610aaa57610aa9610657565b5b6000610ab888828901610a38565b9550506020610ac988828901610a4d565b9450506040610ada88828901610a79565b9350506060610aeb88828901610a79565b9250506080610afc88828901610a38565b915050929550929590935056fea2646970667358221220616bbf94dc223ff63eb359a034ae84320d39a0740e7ab3f2b342c62f1171c07164736f6c63430008090033",
  "devdoc": {
    "author": "RJ-W",
    "details": "This price feeds from Chainlink",
    "kind": "dev",
    "methods": {
      "predict(int256)": {
        "details": "init or update one's prediction"
      },
      "verify()": {
        "details": "get the latest price, verify all prediction, and record"
      }
    },
    "title": "growthGame Contract",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "predict(int256)": {
        "notice": "wizards predict the uplift of successor exchange rate between ETH and USD"
      },
      "verify()": {
        "notice": "owner operate the game"
      }
    },
    "notice": "This contract is for finding out prophets from wizards through continuous predict game",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 151,
        "contract": "contracts/growthGame.sol:growthGame",
        "label": "s_wizards",
        "offset": 0,
        "slot": "0",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 154,
        "contract": "contracts/growthGame.sol:growthGame",
        "label": "s_prophets",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 156,
        "contract": "contracts/growthGame.sol:growthGame",
        "label": "s_currentPrice",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 160,
        "contract": "contracts/growthGame.sol:growthGame",
        "label": "s_addressToPrediction",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_int256)"
      },
      {
        "astId": 164,
        "contract": "contracts/growthGame.sol:growthGame",
        "label": "s_addressToIntegration",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 167,
        "contract": "contracts/growthGame.sol:growthGame",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "5",
        "type": "t_contract(AggregatorV3Interface)45"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_int256": {
        "encoding": "inplace",
        "label": "int256",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_int256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => int256)",
        "numberOfBytes": "32",
        "value": "t_int256"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}